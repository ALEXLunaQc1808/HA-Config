---
# User is attempting to disarm the panel.  Send the alarm service our collected code then
# reset all the sliders.
alias: hasp_desk01_disarm
initial_state: 'on'
trigger:
  - platform: mqtt
    topic: 'hasp/desk01/state/p[7].b[15]'
    payload: 'OFF'
condition:
  condition: or
  conditions:
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: 'armed_away'
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: 'armed_home'
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: 'armed_night'
action:
  - service: alarm_control_panel.alarm_disarm
    entity_id: alarm_control_panel.home_alarm
    data_template:
      code: '{{ states("input_number.hasp_desk01_alarmcode1") | int }}{{ states("input_number.hasp_desk01_alarmcode2") | int }}{{ states("input_number.hasp_desk01_alarmcode3") | int }}{{ states("input_number.hasp_desk01_alarmcode4") | int }}'
  - service: input_number.set_value
    data_template:
      entity_id: input_number.hasp_desk01_alarmcode1
      value: '-1'
  - service: input_number.set_value
    data_template:
      entity_id: input_number.hasp_desk01_alarmcode2
      value: '-1'
  - service: input_number.set_value
    data_template:
      entity_id: input_number.hasp_desk01_alarmcode3
      value: '-1'
  - service: input_number.set_value
    data_template:
      entity_id: input_number.hasp_desk01_alarmcode4
      value: '-1'

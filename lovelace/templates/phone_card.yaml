---
phone_card:
  card:
    type: custom:layout-card
    layout_type: custom:vertical-layout
    cards:
    type: 'custom:button-card'
    entity: sensor.[[phone_entity]]_battery_level
    entity_picture: '[[phone_image]]'
    show_entity_picture: true
    aspect_ratio: 1/1
    name: '[[phone_name]]'
    styles:
      card:
#        - background-color: '#2b374e'
        - border-radius: 10%
        - padding: 7%
        - color: ivory
        - font-size: 10px
        - text-shadow: 0px 0px 5px black
        - text-transform: capitalize
      grid:
        - grid-template-areas: '"i temp" "n n" "bluetooth bluetooth" "wifi wifi" "charging charging"'
        - grid-template-columns: 1fr 1fr
        - grid-template-rows: 1fr min-content min-content min-content min-content
      name:
        - font-weight: bold
        - font-size: 15px
        - color: white
        - align-self: middle
        - justify-self: start
        - padding-bottom: 6px
      img_cell:
        - justify-content: start
        - align-items: start
        - margin: none
      icon:
        - width: 70%
      custom_fields:
        temp:
          - align-self: start
          - justify-self: end
          - font-size: 13px
        bluetooth:
          - padding-bottom: 2px
          - align-self: middle
          - justify-self: start
          - font-size: 11px
#              - '--text-color-sensor': >-
#                  [[[ if (states['binary_sensor.[[phone_entity]]_bluetooth_state'].state
#                  !== 'on') return "red"; ]]]
        wifi:
          - padding-bottom: 2px
          - align-self: middle
          - justify-self: start
          - font-size: 11px
#              - '--text-color-sensor': >-
#                  [[[ if (states["binary_sensor.[[phone_entity]]_wifi_state"].state !==
#                  'on') return "red"; ]]]
        charging:
          - align-self: middle
          - padding-bottom: 2px
          - justify-self: start
          - font-size: 11px
#              - '--text-color-sensor': >-
#                  [[[ if (states['sensor.[[phone_entity]]_battery_state'].state == 'discharging')
#                  return "red"; ]]]
    custom_fields:
      temp: |
        [[[
          return `<ha-icon
            icon="mdi:battery-high"
            style="width: 22px; height: 22px; color: white;">
            </ha-icon><span>${entity.state}%</span>`
        ]]]
      bluetooth: |
        [[[
          return `<ha-icon
            icon="mdi:bluetooth"
            style="width: 20px; height: 20px; color: white;">
            </ha-icon><span>  Bluetooth: <span style="color: var(--text-color-sensor);">${states['binary_sensor.[[phone_entity]]_bluetooth_state'].state}</span></span>`
        ]]]
      wifi: |
        [[[
          return `<ha-icon
            icon="mdi:wifi"
            style="width: 20px; height: 20px; color: white;">
            </ha-icon><span>  WiFi: <span style="color: var(--text-color-sensor);">${states['binary_sensor.[[phone_entity]]_wifi_state'].state}</span></span>`
        ]]]
      charging: |
        [[[
          return `<ha-icon
            icon="mdi:battery-charging"
            style="width: 20px; height: 20px; color: white;">
            </ha-icon><span>  Battery Status: <span style="color: var(--text-color-sensor);">${states['sensor.[[phone_entity]]_battery_state'].state}</span></span>`
        ]]]
